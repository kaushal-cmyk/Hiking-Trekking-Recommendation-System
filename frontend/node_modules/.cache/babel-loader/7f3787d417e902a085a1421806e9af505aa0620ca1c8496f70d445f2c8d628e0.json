{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport FormikInput from \"./Formik/FormikInput\";\nimport FormikTextArea from \"./Formik/FormikTextArea\";\nimport FormikSelect from \"./Formik/FormikSelect\";\nimport FormikRadio from \"./Formik/FormikRadio\";\nimport difficulty from \"../data/difficulty\";\nimport routeType from \"../data/routeType\";\nimport { displayError } from \"../utils/toast\";\nimport { ToastContainer } from \"react-toastify\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateSpecificHTLocation = () => {\n  _s();\n  let params = useParams();\n  console.log(params);\n  let navigate = useNavigate();\n  let [hTName, setHTName] = useState(\"\");\n  let [location, setLocation] = useState(\"\");\n  let [length, setLength] = useState(0);\n  let [lengthUnit, setLengthUnit] = useState(\"km\");\n  let [elevationGain, setElevationGain] = useState(0);\n  let [elevationGainUnit, setElevationGainUnit] = useState(\"m\");\n  let [startLatitude, setStartLatitude] = useState(\"\");\n  let [startLongitude, setStartLongitude] = useState(\"\");\n  let [endLatitude, setEndLatitude] = useState(\"\");\n  let [endLongitude, setEndLongitude] = useState(\"\");\n  let [attributes, setAttributes] = useState(\"\");\n  let [routeType, setRouteType] = useState(\"Loop\");\n  let [difficulty, setDifficulty] = useState(\"easy\");\n  let [description, setDescription] = useState(\"\");\n  let getHTLocationInfo = async () => {\n    try {\n      let result = await axios({\n        url: `http://localhost:8000/hTLocations/${params.hTLocId}`,\n        method: `get`,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      console.log(result.data.result);\n      result = result.data.result;\n      setHTName(result.hTName);\n      set;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getHTLocationInfo();\n  }, []);\n  let initialValues = {\n    hTName: hTName,\n    location: location,\n    length: length,\n    lengthUnit: lengthUnit,\n    elevationGain: elevationGain,\n    elevationGainUnit: elevationGainUnit,\n    description: description,\n    startLatitude: startLatitude,\n    startLongitude: startLongitude,\n    endLatitude: endLatitude,\n    endLongitude: endLongitude,\n    attributes: attributes,\n    routeType: routeType,\n    difficulty: difficulty\n  };\n  let onSubmit = async data => {\n    console.log(data);\n    let attributes = data.attributes.split(\",\").map((item, i) => item.trim());\n    data = {\n      hTName: data.hTName,\n      location: data.location,\n      length: {\n        value: data.length,\n        unit: data.lengthUnit\n      },\n      elevationGain: {\n        value: data.elevationGain,\n        unit: data.elevationGainUnit\n      },\n      start: {\n        latitude: data.startLatitude,\n        longitude: data.startLongitude\n      },\n      end: {\n        latitude: data.endLatitude,\n        longitude: data.endLongitude\n      },\n      attributes: attributes,\n      routeType: data.routeType,\n      difficulty: data.difficulty\n    };\n    try {\n      let result = await axios({\n        url: `http://localhost:8000/hTLocations/`,\n        method: `post`,\n        data: data,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      console.log(result);\n      navigate(`/hTLocations/${result.data.result._id}`);\n    } catch (error) {\n      console.log(error.response.data.message);\n      displayError(error.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(UpdateSpecificHTLocation, \"pTPDC4l3CXFT4bZcdMTXQjkDrRc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateSpecificHTLocation;\nexport default UpdateSpecificHTLocation;\nvar _c;\n$RefreshReg$(_c, \"UpdateSpecificHTLocation\");","map":{"version":3,"names":["axios","Form","Formik","React","useEffect","useState","FormikInput","FormikTextArea","FormikSelect","FormikRadio","difficulty","routeType","displayError","ToastContainer","useNavigate","useParams","Fragment","_Fragment","jsxDEV","_jsxDEV","UpdateSpecificHTLocation","_s","params","console","log","navigate","hTName","setHTName","location","setLocation","length","setLength","lengthUnit","setLengthUnit","elevationGain","setElevationGain","elevationGainUnit","setElevationGainUnit","startLatitude","setStartLatitude","startLongitude","setStartLongitude","endLatitude","setEndLatitude","endLongitude","setEndLongitude","attributes","setAttributes","setRouteType","setDifficulty","description","setDescription","getHTLocationInfo","result","url","hTLocId","method","headers","Authorization","localStorage","getItem","data","set","error","initialValues","onSubmit","split","map","item","i","trim","value","unit","start","latitude","longitude","end","_id","response","message","_c","$RefreshReg$"],"sources":["D:/Desktop/collegeProject/frontend/src/components/UpdateSpecificHTLocation.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport FormikInput from \"./Formik/FormikInput\";\r\nimport FormikTextArea from \"./Formik/FormikTextArea\";\r\nimport FormikSelect from \"./Formik/FormikSelect\";\r\nimport FormikRadio from \"./Formik/FormikRadio\";\r\nimport difficulty from \"../data/difficulty\";\r\nimport routeType from \"../data/routeType\";\r\nimport { displayError } from \"../utils/toast\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst UpdateSpecificHTLocation = () => {\r\n  let params = useParams();\r\n  console.log(params);\r\n  let navigate = useNavigate();\r\n  let [hTName, setHTName] = useState(\"\");\r\n  let [location, setLocation] = useState(\"\");\r\n  let [length, setLength] = useState(0);\r\n  let [lengthUnit, setLengthUnit] = useState(\"km\");\r\n  let [elevationGain, setElevationGain] = useState(0);\r\n  let [elevationGainUnit, setElevationGainUnit] = useState(\"m\");\r\n  let [startLatitude, setStartLatitude] = useState(\"\");\r\n  let [startLongitude, setStartLongitude] = useState(\"\");\r\n  let [endLatitude, setEndLatitude] = useState(\"\");\r\n  let [endLongitude, setEndLongitude] = useState(\"\");\r\n  let [attributes, setAttributes] = useState(\"\");\r\n  let [routeType, setRouteType] = useState(\"Loop\");\r\n  let [difficulty, setDifficulty] = useState(\"easy\");\r\n  let [description, setDescription] = useState(\"\");\r\n\r\n  let getHTLocationInfo = async () => {\r\n    try {\r\n      let result = await axios({\r\n        url: `http://localhost:8000/hTLocations/${params.hTLocId}`,\r\n        method: `get`,\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n        }\r\n      });\r\n      console.log(result.data.result);\r\n      result = result.data.result;\r\n      setHTName(result.hTName);\r\n      set\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n    }\r\n  };\r\n  useEffect(() => {getHTLocationInfo()}, []);\r\n\r\n  let initialValues = {\r\n    hTName: hTName,\r\n    location: location,\r\n    length: length,\r\n    lengthUnit: lengthUnit,\r\n    elevationGain: elevationGain,\r\n    elevationGainUnit: elevationGainUnit,\r\n    description: description,\r\n    startLatitude: startLatitude,\r\n    startLongitude: startLongitude,\r\n    endLatitude: endLatitude,\r\n    endLongitude: endLongitude,\r\n    attributes: attributes,\r\n    routeType: routeType,\r\n    difficulty: difficulty,\r\n  };\r\n  let onSubmit = async (data) => {\r\n    console.log(data);\r\n    let attributes = data.attributes.split(\",\").map((item, i) => item.trim());\r\n    data = {\r\n      hTName: data.hTName,\r\n      location: data.location,\r\n      length: {\r\n        value: data.length,\r\n        unit: data.lengthUnit,\r\n      },\r\n      elevationGain: {\r\n        value: data.elevationGain,\r\n        unit: data.elevationGainUnit,\r\n      },\r\n      start: {\r\n        latitude: data.startLatitude,\r\n        longitude: data.startLongitude,\r\n      },\r\n      end: {\r\n        latitude: data.endLatitude,\r\n        longitude: data.endLongitude,\r\n      },\r\n      attributes: attributes,\r\n      routeType: data.routeType,\r\n      difficulty: data.difficulty,\r\n    };\r\n    try {\r\n      let result = await axios({\r\n        url: `http://localhost:8000/hTLocations/`,\r\n        method: `post`,\r\n        data: data,\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      console.log(result);\r\n      navigate(`/hTLocations/${result.data.result._id}`);\r\n    } catch (error) {\r\n      console.log(error.response.data.message);\r\n      displayError(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <ToastContainer></ToastContainer>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        // validationSchema={}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {(formik) => {\r\n          return (\r\n            <Form>\r\n              <FormikInput\r\n                id=\"hTName\"\r\n                label=\"Hike/Trek name\"\r\n                type=\"text\"\r\n                name=\"hTName\"\r\n                onChange={(e) => {\r\n                  formik.setFieldValue(\"hTName\", e.target.value);\r\n                }}\r\n                required={true}\r\n              ></FormikInput>\r\n              <br></br>\r\n              <FormikInput\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                type=\"text\"\r\n                name=\"location\"\r\n                onChange={(e) => {\r\n                  formik.setFieldValue(\"location\", e.target.value);\r\n                }}\r\n                required={true}\r\n              ></FormikInput>\r\n              <br></br>\r\n              <span>Starting Point</span>\r\n              <FormikInput\r\n                id=\"startLatitude\"\r\n                type=\"text\"\r\n                name=\"startLatitude\"\r\n                placeholder=\"Latitude\"\r\n                onChange={(e) => {\r\n                  formik.setFieldValue(\"startLatitude\", e.target.value);\r\n                }}\r\n                required={true}\r\n              ></FormikInput>\r\n              <FormikInput\r\n                id=\"startLongitude\"\r\n                type=\"text\"\r\n                name=\"startLongitude\"\r\n                placeholder=\"Longitude\"\r\n                onChange={(e) => {\r\n                  formik.setFieldValue(\"startLongitude\", e.target.value);\r\n                }}\r\n                required={false}\r\n              ></FormikInput>\r\n              <br></br>\r\n              <span>Ending Point</span>\r\n              <FormikInput\r\n                id=\"endLatitude\"\r\n                type=\"text\"\r\n                name=\"endLatitude\"\r\n                placeholder=\"Latitude\"\r\n                onChange={(e) => {\r\n                  formik.setFieldValue(\"endLatitude\", e.target.value);\r\n                }}\r\n                required={true}\r\n              ></FormikInput>\r\n              <FormikInput\r\n                id=\"endLongitude\"\r\n                type=\"text\"\r\n                name=\"endLongitude\"\r\n                placeholder=\"Longitude\"\r\n                onChange={(e) => {\r\n                  formik.setFieldValue(\"endLongitude\", e.target.value);\r\n                }}\r\n                required={false}\r\n              ></FormikInput>\r\n              <br></br>\r\n              <FormikInput\r\n                label=\"Length\"\r\n                id=\"length\"\r\n                type=\"text\"\r\n                name=\"length\"\r\n                placeholder=\"length\"\r\n                onChange={(e) => {\r\n                  formik.setFieldValue(\"length\", e.target.value);\r\n                }}\r\n                required={false}\r\n              ></FormikInput>\r\n              <FormikSelect\r\n                options={[\r\n                  { value: \"m\", label: \"Metre\" },\r\n                  { value: \"km\", label: \"Kilometre\" },\r\n                ]}\r\n                name=\"lengthUnit\"\r\n                label=\"Length Unit: \"\r\n                id=\"lengthUnit\"\r\n              ></FormikSelect>\r\n              <br></br>\r\n              <FormikInput\r\n                label=\"Elevation Gain\"\r\n                id=\"elevationGain\"\r\n                type=\"text\"\r\n                name=\"elevationGain\"\r\n                placeholder=\"elevationGain\"\r\n                onChange={(e) => {\r\n                  formik.setFieldValue(\"elevationGain\", e.target.value);\r\n                }}\r\n                required={false}\r\n              ></FormikInput>\r\n              <FormikSelect\r\n                options={[\r\n                  { value: \"m\", label: \"Metre\" },\r\n                  { value: \"km\", label: \"Kilometre\" },\r\n                ]}\r\n                name=\"elevationUnit\"\r\n                label=\"Elevation Unit: \"\r\n                id=\"elevationUnit\"\r\n              ></FormikSelect>\r\n              <br></br>\r\n              <FormikInput\r\n                label=\"Attributes\"\r\n                id=\"attributes\"\r\n                type=\"text\"\r\n                name=\"attributes\"\r\n                placeholder=\"Attributes separated by comma(,)\"\r\n                onChange={(e) => {\r\n                  formik.setFieldValue(\"attributes\", e.target.value);\r\n                }}\r\n                required={false}\r\n              ></FormikInput>\r\n              <br></br>\r\n              <FormikTextArea\r\n                name=\"description\"\r\n                id=\"description\"\r\n                onChange={(e) => {\r\n                  formik.setFieldValue(\"description\", e.target.value);\r\n                }}\r\n                label=\"Description: \"\r\n                placeholder=\"Write about the location here\"\r\n              ></FormikTextArea>\r\n              <FormikRadio\r\n                options={difficulty}\r\n                label=\"Difficulty\"\r\n                name=\"difficulty\"\r\n                required={true}\r\n              ></FormikRadio>\r\n              <br></br>\r\n              <FormikRadio\r\n                label=\"Route Type\"\r\n                options={routeType}\r\n                name=\"routeType\"\r\n                required={true}\r\n              ></FormikRadio>\r\n              <br></br>\r\n              <button type=\"submit\">Create</button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateSpecificHTLocation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}