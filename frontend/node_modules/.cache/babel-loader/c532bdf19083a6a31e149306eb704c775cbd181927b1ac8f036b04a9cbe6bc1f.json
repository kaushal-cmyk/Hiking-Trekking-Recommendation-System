{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\collegeProject\\\\frontend\\\\src\\\\components\\\\ShowAllHTLocation.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ShowAllHTLocation = () => {\n  _s();\n  // let [rating, setRating] = useState(0);\n  let [hTLocations, setHTLocations] = useState([]);\n  let navigate = useNavigate();\n  let getAllHTLocation = async () => {\n    try {\n      let result = await axios({\n        url: `http://localhost:8000/hTLocations`,\n        method: `get`\n      });\n      setHTLocations(result.data.result);\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getAllHTLocation();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: hTLocations.map((hTLocation, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: i % 2 === 0 ? {\n          backgroundColor: \"lightblue\"\n        } : {\n          backgroundColor: \"lightgoldenrodyellow\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", hTLocation.hTName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", hTLocation.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Difficult: \", hTLocation.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Length: \", hTLocation.length.value, hTLocation.length.unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            navigate(`${hTLocation._id}`);\n          },\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {},\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add to Wishlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(ShowAllHTLocation, \"XKnqXQKi5W3IffKvgwCQtA0TRQo=\", false, function () {\n  return [useNavigate];\n});\n_c = ShowAllHTLocation;\nexport default ShowAllHTLocation;\nvar _c;\n$RefreshReg$(_c, \"ShowAllHTLocation\");","map":{"version":3,"names":["axios","React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ShowAllHTLocation","_s","hTLocations","setHTLocations","navigate","getAllHTLocation","result","url","method","data","console","log","error","children","map","hTLocation","i","style","backgroundColor","hTName","fileName","_jsxFileName","lineNumber","columnNumber","location","difficulty","length","value","unit","onClick","_id","_c","$RefreshReg$"],"sources":["D:/Desktop/collegeProject/frontend/src/components/ShowAllHTLocation.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ShowAllHTLocation = () => {\r\n  // let [rating, setRating] = useState(0);\r\n  let [hTLocations, setHTLocations] = useState([]);\r\n  let navigate = useNavigate();\r\n\r\n  let getAllHTLocation = async () => {\r\n    try {\r\n      let result = await axios({\r\n        url: `http://localhost:8000/hTLocations`,\r\n        method: `get`,\r\n      });\r\n      setHTLocations(result.data.result);\r\n      console.log(result);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllHTLocation();\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <>\r\n      {hTLocations.map((hTLocation, i) => {\r\n        return (\r\n          <div\r\n            key={i}\r\n            style={\r\n              i % 2 === 0\r\n                ? { backgroundColor: \"lightblue\" }\r\n                : { backgroundColor: \"lightgoldenrodyellow\" }\r\n            }\r\n          >\r\n            <p>Name: {hTLocation.hTName}</p>\r\n            <p>Location: {hTLocation.location}</p>\r\n            <p>Difficult: {hTLocation.difficulty}</p>\r\n            <p>\r\n              Length: {hTLocation.length.value}\r\n              {hTLocation.length.unit}\r\n            </p>\r\n            <button\r\n              onClick={() => {\r\n                navigate(`${hTLocation._id}`);\r\n              }}\r\n            >\r\n              Details\r\n            </button>\r\n            <button onClick={() => {}}>Edit</button>\r\n            <button>Add to Wishlist</button>\r\n            {/* <form onSubmit={() => {}}>\r\n              <label htmlFor=\"rating\">Rating: </label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"5\"\r\n                id=\"rating\"\r\n                value={rating}\r\n                onChange={(e) => {\r\n                  setRating(e.target.value);\r\n                }}\r\n              ></input>\r\n              <button type=\"submit\">submit rating</button>\r\n            </form> */}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowAllHTLocation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B;EACA,IAAI,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,IAAIU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE5B,IAAIU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,IAAIC,MAAM,GAAG,MAAMf,KAAK,CAAC;QACvBgB,GAAG,EAAG,mCAAkC;QACxCC,MAAM,EAAG;MACX,CAAC,CAAC;MACFL,cAAc,CAACG,MAAM,CAACG,IAAI,CAACH,MAAM,CAAC;MAClCI,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;IACrB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB;EACF,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdY,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACER,OAAA,CAAAE,SAAA;IAAAc,QAAA,EACGX,WAAW,CAACY,GAAG,CAAC,CAACC,UAAU,EAAEC,CAAC,KAAK;MAClC,oBACEnB,OAAA;QAEEoB,KAAK,EACHD,CAAC,GAAG,CAAC,KAAK,CAAC,GACP;UAAEE,eAAe,EAAE;QAAY,CAAC,GAChC;UAAEA,eAAe,EAAE;QAAuB,CAC/C;QAAAL,QAAA,gBAEDhB,OAAA;UAAAgB,QAAA,GAAG,QAAM,EAACE,UAAU,CAACI,MAAM;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChC1B,OAAA;UAAAgB,QAAA,GAAG,YAAU,EAACE,UAAU,CAACS,QAAQ;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtC1B,OAAA;UAAAgB,QAAA,GAAG,aAAW,EAACE,UAAU,CAACU,UAAU;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzC1B,OAAA;UAAAgB,QAAA,GAAG,UACO,EAACE,UAAU,CAACW,MAAM,CAACC,KAAK,EAC/BZ,UAAU,CAACW,MAAM,CAACE,IAAI;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eACJ1B,OAAA;UACEgC,OAAO,EAAEA,CAAA,KAAM;YACbzB,QAAQ,CAAE,GAAEW,UAAU,CAACe,GAAI,EAAC,CAAC;UAC/B,CAAE;UAAAjB,QAAA,EACH;QAED;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1B,OAAA;UAAQgC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;UAAAhB,QAAA,EAAC;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxC1B,OAAA;UAAAgB,QAAA,EAAQ;QAAe;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAtB3BP,CAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAqCH,CAAC;IAEV,CAAC;EAAC,gBACF,CAAC;AAEP,CAAC;AAACtB,EAAA,CAtEID,iBAAiB;EAAA,QAGNL,WAAW;AAAA;AAAAoC,EAAA,GAHtB/B,iBAAiB;AAwEvB,eAAeA,iBAAiB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}